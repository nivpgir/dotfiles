#!/bin/sh
systemctl --user set-environment WAYLAND_DISPLAY="$WAYLAND_DISPLAY"
export MOZ_ENABLE_WAYLAND=1		# start firefox with wayland

wlr-randr --output eDP-1 --scale 1.5

(
    RIVER_CONF_DIR=$HOME/.config/river
    $RIVER_CONF_DIR/startup-apps.sh
)

export TERMINAL="alacritty"
export FLOATING_TERMINAL="alacritty --class float"
riverctl focus-follows-cursor normal

# riverctl map normal Super G spawn quick-snote
riverctl map normal Super R spawn kickoff
riverctl map normal Super Escape spawn kickoff
riverctl map normal Super backslash spawn ~/.config/scripts/show-logs
# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.
# localectl set-x11-keymap us,il pc105 us custom:hyper4

# Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Super Return spawn "$TERMINAL"
# riverctl map normal Super Return spawn "bash -c 'wayshot --stdout -s \"$(slurp -f \\\"%x %y %w %h\\\")\" | swappy -f -'"

# Super+Shift+Q to close the focused view
riverctl map normal Super+Shift Q close
riverctl map normal Super BackSpace close

# Super+Control+Alt Delete exit to exit river
riverctl map normal Super+Control+Alt Delete exit

# Super+S and Super+W to focus the next/previous view in the layout stack

riverctl map normal Super Space focus-view next
riverctl map normal Super+Shift Space focus-view previous

# Super+Shift+S and Super+Shift+W to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift X swap next
riverctl map normal Super+Shift Z swap previous

# Super+Alt+Shift+{W,A,S,D} to resize views
riverctl map normal Super+Control I resize vertical -100
riverctl map normal Super+Control J resize horizontal -100
riverctl map normal Super+Control K resize vertical 100
riverctl map normal Super+Control L resize horizontal 100

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

riverctl map normal Super Print spawn "wayshot -s \$(slurp -f \"%x %y %w %h\")"

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super+Shift Return zoom

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))
    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags
    riverctl map normal Super F$i set-focused-tags $tags
    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags
    riverctl map normal Super+Shift F$i set-view-tags $tags
    # Super+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags
    riverctl map normal Super+Control F$i toggle-focused-tags $tags
    # Super+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
    riverctl map normal Super+Shift+Control F$i toggle-view-tags $tags
done


# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Shift+T to toggle float
riverctl map normal Super+Shift T toggle-float

# Super+E to toggle fullscreen
riverctl map normal Super E toggle-fullscreen
# yuioophjkl;nm,./
# azgbvx

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
done

# Set background and border color
# colors taken from: https://colorcodes.io/purple/light-zerg-purple-color-codes/
# riverctl background-color 0x002b36
riverctl background-color 0x000000
riverctl border-color-focused 0xa6517e # Light Zerg Purple
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

for pad in $(riverctl list-inputs | grep -i touchpad )
do
  riverctl input $pad events enabled
  riverctl input $pad tap enabled
  riverctl input $pad natural-scroll enabled
  riverctl input $pad disable-while-typing disabled
  riverctl input $pad middle-emulation enabled
done


# Make certain views start floating
riverctl float-filter-add title "Choose Application"
riverctl float-filter-add app-id ActivityLog
riverctl float-filter-add app-id blueman-manager
riverctl float-filter-add app-id pavucontrol
riverctl float-filter-add app-id zoom
riverctl float-filter-add app-id float
riverctl float-filter-add app-id floating
riverctl float-filter-add app-id org.keepassxc.KeePassXC
riverctl float-filter-add app-id KeePassXC
riverctl float-filter-add app-id spyglass
riverctl float-filter-add app-id Spyglass
riverctl float-filter-add app-id com.khrykin.strategr
riverctl float-filter-add app-id com.khrykin.strategr-v0
riverctl float-filter-add app-id com.khrykin.Strategr
riverctl float-filter-add title "float-snote"
riverctl float-filter-add title QuickSnoTT
riverctl float-filter-add title blueman-manager

# Set app-ids and titles of views which should use client side decorations
riverctl csd-filter-add app-id "gedit"

scratch_tag=$((1 << 20 ))

# Toggle the scratchpad with Super+P
riverctl map normal Super grave toggle-focused-tags ${scratch_tag}

# Send windows to the scratchpad with Super+Shift+P
riverctl map normal Super+Shift grave set-view-tags ${scratch_tag}

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

search_tag=$((1 << 19 ))
# Toggle the search bar with Super+P
riverctl map normal Super SemiColon toggle-tagmask



# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
# riverctl default-layout rivertile
# rivertile -view-padding 6 -outer-padding 6
riverctl default-layout riverguile
riverguile
