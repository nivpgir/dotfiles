(defcfg
  ;; ;; For Linux
  ;; input  (device-file "/dev/input/by-id/usb-04d9_daskeyboard-event-kbd")
  ;; output (uinput-sink "My KMonad output"
  ;;   ;; To understand the importance of the following line, see the section on
  ;;   ;; Compose-key sequences at the near-bottom of this file.
  ;;   "/run/current-system/sw/bin/sleep 1 && /run/current-system/sw/bin/setxkbmap -option compose:ralt")
  ;; cmp-seq ralt    ;; Set the compose key to `RightAlt'
  ;; cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press

  ;; For Windows
  ;; make sure to use: https://github.com/mauedu/kmonad/tree/win-repeat-key
  ;; git clone https://github.com/mauedu/kmonad.git -b win-repeat-key kmonad-win-repeat-key-fix
  ;; cd kmonad
  ;; stack build
  ;; # binary is at: .stack-work/install/<some hash>/bin/kmonad.exe
  input  (low-level-hook)
  output (send-event-sink 500 25)

  ;; ;; For MacOS
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  ;; Comment tehis if you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
  )


(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc  ins  home pgup  nlck kp/  kp*  kp-
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    ret   del  end  pgdn  kp7  kp8  kp9  kp+
  caps a    s    d    f    g    h    j    k    l    ;    '    \                          kp4  kp5  kp6
  lsft 102d z    x    c    v    b    n    m    ,    .    /    rsft            up         kp1  kp2  kp3  kprt
  lctl lmet lalt           spc                 ralt rmet cmp  rctl       left down rght  kp0  kp.
)


;; (defalias
  ;; sl (sticky-key 300 lsft)
  ;; sr (sticky-key 300 rsft))



(deflayer qwerty
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc  ins  home pgup  nlck kp/  kp*  kp-
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    ret   del  end  pgdn  kp7  kp8  kp9  kp+
  @cap a    s    d    f    g    h    j    k    l    ;    '    \                          kp4  kp5  kp6
  lsft 102d z    x    c    v    b    n    m    ,    .    /    rsft            up         kp1  kp2  kp3  kprt
  lctl lmet lalt           spc                 ralt rmet cmp  rctl       left down rght  kp0  kp.
)


(defalias
  cap (tap-hold 200 caps (layer-toggle wasd-arrows-layer)))

(deflayer wasd-arrows-layer
  _    _    _    _    _    _    _    _    _    _    _    _    _          _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _     _    _    _    _    _    _    _
  _    _    up   _    _    _    _    _    _    _    _    _    _    _     _    _    _    _    _    _    _
  _    left down rght _    _    _    _    _    _    _    _    _                         _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _               _         _    _    _    _
  _    _    _              _                   _    _    _    _          _    _    _    _    _
)

;; (deflayer macro-test
;;   _    @mc1 _    @mc3 _    _    _    _    _    _    _    _    _    _
;;   _    _    _    _    _    _    _    _    _    _    _    _    _    _
;;   _    _    _    _    _    _    _    _    _    _    _    _    _
;;   _    _    _    _    _    _    _    _    _    _    _    _
;;   _    _    _              _              _    _    _    _
;;   )

;; (defalias
;;   tst (layer-toggle multi-overlay))

;; (deflayer multi-overlay
;;   @mt  _    _    _    _    _    _    _    _    _    _    _    _    _
;;   _    _    _    _    _    _    _    _    _    _    _    _    _    _
;;   @thn _    _    _    _    _    _    _    _    _    _    _    _
;;   @xtn _    _    _    _    _    _    _    _    _    _    @xth
;;   @tnr _    _              _              _    _    _    @tnh
;;   )



;; (defalias
;;   mt  (multi-tap 300 a 300 b 300 c 300 d e)
;;   xtn (tap-next x lsft)         ;; Shift that does 'x' on tap
;;   xth (tap-hold 400 x lsft)     ;; Long delay for easier testing
;;   thn (tap-hold-next 400 x lsft)
;;   tnr (tap-next-release x lsft)
;;   tnh (tap-hold-next-release 2000 x lsft)

;;   ;; Used it the colemak layer
;;   xcp (tap-hold-next 400 esc ctl)
;; )



